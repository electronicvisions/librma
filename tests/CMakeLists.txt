set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Wall")

function(rma2_test_template BIN_NAME)
	add_executable(${BIN_NAME} ${BIN_NAME}.c)
	target_link_libraries(${BIN_NAME} rma2)
	install(TARGETS ${BIN_NAME} DESTINATION bin)
endfunction()

rma2_test_template(openclose)
rma2_test_template(connect)
rma2_test_template(rra_write)
rma2_test_template(rra_read)
rma2_test_template(pmem_write)
rma2_test_template(pmem_read)
rma2_test_template(mem_read)
rma2_test_template(mem_write)
rma2_test_template(mem_read_ntr)
rma2_test_template(mem_write_ntr)
rma2_test_template(pmem_read_with_noti)
rma2_test_template(mem_read_with_noti)
rma2_test_template(pmem_write_with_noti)
rma2_test_template(pmem_write_with_noti_irq)
rma2_test_template(mem_write_with_noti)
rma2_test_template(mem_write_with_noti_irq)
rma2_test_template(noti_put)
rma2_test_template(destination_process)
rma2_test_template(pmem_target)
rma2_test_template(testregister)
rma2_test_template(notiput_irq)
rma2_test_template(illegal_cmd)
rma2_test_template(illegal_cmd_with_noti)
rma2_test_template(illegal_mem_write)
rma2_test_template(illegal_mem_write_requester)
rma2_test_template(illegal_mem_vpid_write)
rma2_test_template(illegal_vpid_write)
rma2_test_template(illegal_mem_read)
rma2_test_template(illegal_excel_rra)
rma2_test_template(illegal_excel)


add_executable(rma2test rma2test.c rma2_ping.c rma2_pong.c rma2test.h)
target_link_libraries(rma2test rma2)
install(TARGETS rma2test DESTINATION bin)
